{.passC: "-msse4".}
{.passL: "-msse4".}
discard """
  cmd: "nim c --passC:'-msse4' --passL:'-msse4' $file"
"""
import nseqops/sse4
import unittest

suite "sumSeqプロシージャのテスト":
  test "空シーケンスの合計":
    check sumSeq(@[]) == 0.0

  test "正の値のみの合計":
    check sumSeq(@[1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0]) == 28.0

  test "負の値のみの合計":
    check sumSeq(@[-1.0, -2.0, -3.0, -4.0, -5.0, -6.0, -7.0]) == -28.0

  test "正と負の値の合計":
    check sumSeq(@[1.0, -2.0, 3.0, -4.0, 5.0, -6.0, 7.0]) == 4.0

suite "prodSeqプロシージャのテスト":
  test "空シーケンスの積":
    check prodSeq(@[]) == 1.0

  test "正の値のみの積":
    check prodSeq(@[1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0]) == 5040.0

  test "負の値のみの積":
    check prodSeq(@[-1.0, -2.0, -3.0, -4.0, -5.0, -6.0, -7.0]) == -5040.0

  test "正と負の値の積":
    check prodSeq(@[1.0, -2.0, 3.0, -4.0, 5.0, -6.0, 7.0]) == -5040.0

suite "addSeqsプロシージャのテスト":
  test "要素ごとの加算":
    check addSeqs(@[1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0], @[7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0]) == @[8.0, 8.0, 8.0, 8.0, 8.0, 8.0, 8.0]

  # test "長さが異なるシーケンス":
  #   expect ValueError:
  #     discard addSeqs(@[1.0, 2.0, 3.0], @[4.0, 5.0])

suite "subSeqsプロシージャのテスト":
  test "要素ごとの差分":
    check subSeqs(@[7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0], @[1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0]) == @[6.0, 4.0, 2.0, 0.0, -2.0, -4.0, -6.0]

suite "mulSeqsプロシージャのテスト":
  test "要素ごとの積":
    check mulSeqs(@[1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0], @[7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0]) == @[7.0, 12.0, 15.0, 16.0, 15.0, 12.0, 7.0]

suite "divSeqsプロシージャのテスト":
  test "要素ごとの商":
    check divSeqs(@[7.0, 14.0, 21.0, 28.0, 35.0, 42.0, 49.0], @[7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0]) == @[1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0]

suite "dotSeqsプロシージャのテスト":
  test "ドット積の計算":
    check dotSeqs(@[1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0], @[7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0]) == 84.0

suite "addSeqScalarプロシージャのテスト":
  test "スカラー加算":
    check addSeqScalar(@[1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0], 3.0) == @[4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0]

suite "subSeqScalarプロシージャのテスト":
  test "スカラー減算":
    check subSeqScalar(@[7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0], 3.0) == @[4.0, 3.0, 2.0, 1.0, 0.0, -1.0, -2.0]

suite "mulSeqScalarプロシージャのテスト":
  test "スカラー乗算":
    check mulSeqScalar(@[1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0], 3.0) == @[3.0, 6.0, 9.0, 12.0, 15.0, 18.0, 21.0]

suite "divSeqScalarプロシージャのテスト":
  test "スカラー除算":
    check divSeqScalar(@[21.0, 18.0, 15.0, 12.0, 9.0, 6.0, 3.0], 3.0) == @[7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0]
